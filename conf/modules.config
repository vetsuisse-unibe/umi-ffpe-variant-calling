process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].toLowerCase()}" },
        mode: 'copy',
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: TRIM_READS {
        ext.args = '-q 15 --length_required 50 --cut_front --cut_tail --cut_window_size 4 --cut_mean_quality 20'
    }

    withName: ALIGN_READS {
        cpus = { check_max(12 * task.attempt, 'cpus') }
        ext.args = '-K 100000000 -Y -t $task.cpus'
    }

    withName: ANNOTATE_UMIS {
        ext.args = ''
        publishDir = [
            path: { "${params.outdir}/umi_annotated" },
            mode: 'copy',
            pattern: "*.{bam,bai}"
        ]
    }

    withName: MERGE_BAMS {
        ext.args = "MERGE_SEQUENCE_DICTIONARIES=true USE_THREADING=true CREATE_INDEX=true VALIDATION_STRINGENCY=LENIENT"
    }

    withName: MARK_DUPLICATES {
        ext.args = "CREATE_INDEX=true UMI_TAG_NAME=RX ASSUME_SORTED=true VALIDATION_STRINGENCY=LENIENT"
    }

    withName: BQSR {
        ext.args = ''
        publishDir = [
            path: { "${params.outdir}/bqsr" },
            mode: 'copy',
            pattern: "*.{bam,bai,table,pdf}"
        ]
    }

    withName: CALL_VARIANTS {
        ext.args = "--native-pair-hmm-threads \$task.cpus -stand-call-conf 30 --max-alternate-alleles 3"
    }

    withName: GENOTYPE_GVCFS {
        ext.args = "-stand-call-conf 30 --max-alternate-alleles 3"
    }

    withName: FILTER_VARIANTS {
        ext.args = ''
        publishDir = [
            path: { "${params.outdir}/filtered" },
            mode: 'copy',
            pattern: "*.{vcf.gz,vcf.gz.tbi,stats}"
        ]
    }

    withName: ANNOTATE_VARIANTS {
        ext.args = "-noLog -v"
        publishDir = [
            path: { "${params.outdir}/annotated" },
            mode: 'copy',
            pattern: "*.{vcf.gz,vcf.gz.tbi,csv,txt}"
        ]
    }
}
