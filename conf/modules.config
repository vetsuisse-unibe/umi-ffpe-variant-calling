process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].toLowerCase()}" },
        mode: 'copy',
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'TRIM_READS' {
        ext.args = [
            "-q ${params.fastp_qualified_quality}",
            "--length_required ${params.fastp_length_required}",
            "--cut_front ${params.fastp_cut_front}",
            "--cut_tail ${params.fastp_cut_tail}",
            "--cut_window_size ${params.fastp_cut_window_size}",
            "--cut_mean_quality ${params.fastp_cut_mean_quality}"
        ].join(' ').trim()
    }

    withName: 'ALIGN_READS' {
        ext.args = [
            "-K 100000000",
            "-Y",
            "-t ${task.cpus}"
        ].join(' ').trim()
    }

    withName: 'ANNOTATE_UMIS' {
        ext.args = ''
        publishDir = [
            path: { "${params.outdir}/umi_annotated" },
            mode: 'copy',
            pattern: "*.{bam,bai}"
        ]
    }

    withName: 'MERGE_BAMS' {
        ext.args = [
            "MERGE_SEQUENCE_DICTIONARIES=true",
            "USE_THREADING=true",
            "CREATE_INDEX=true",
            "VALIDATION_STRINGENCY=LENIENT"
        ].join(' ').trim()
    }

    withName: 'MARK_DUPLICATES' {
        ext.args = [
            "CREATE_INDEX=true",
            "UMI_TAG_NAME=RX",
            "ASSUME_SORTED=true",
            "VALIDATION_STRINGENCY=LENIENT"
        ].join(' ').trim()
    }

    withName: 'BQSR' {
        ext.args = ''
        publishDir = [
            path: { "${params.outdir}/bqsr" },
            mode: 'copy',
            pattern: "*.{bam,bai,table,pdf}"
        ]
    }

    withName: 'CALL_VARIANTS' {
        ext.args = [
            "--native-pair-hmm-threads ${task.cpus}",
            "-stand-call-conf ${params.stand_call_conf}",
            "--max-alternate-alleles 3"
        ].join(' ').trim()
    }

    withName: 'GENOTYPE_GVCFS' {
        ext.args = [
            "-stand-call-conf ${params.stand_call_conf}",
            "--max-alternate-alleles 3"
        ].join(' ').trim()
    }

    withName: 'FILTER_VARIANTS' {
        ext.args = ''
        publishDir = [
            path: { "${params.outdir}/filtered" },
            mode: 'copy',
            pattern: "*.{vcf.gz,vcf.gz.tbi,stats}"
        ]
    }

    withName: 'ANNOTATE_VARIANTS' {
        ext.args = "-noLog -v"
        publishDir = [
            path: { "${params.outdir}/annotated" },
            mode: 'copy',
            pattern: "*.{vcf.gz,vcf.gz.tbi,csv,txt}"
        ]
    }
}